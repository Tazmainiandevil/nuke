{
  "$schema": "https://raw.githubusercontent.com/nuke-build/nuke/master/source/Nuke.Tooling.Generator/schema.json",
  "name": "Snyk",
  "officialUrl": "https://snyk.io/",
  "help": "Snyk is a developer security platform that enables application and cloud developers to secure their whole application ï¿½ finding and fixing vulnerabilities from their first lines of code to their running cloud.",
  "pathExecutable": "snyk",
  "tasks": [
    {
      "help": "The snyk auth command authenticates your machine to associate the Snyk CLI with your Snyk account",
      "postfix": "Auth",
      "definiteArgument": "auth",
      "officialUrl": "https://docs.snyk.io/snyk-cli/commands/auth",
      "settingsClass": {
        "properties": [
          {
            "name": "SnykToken",
            "type": "string",
            "format": "{value}",
            "secret": true,
            "help": "The value may be a user token or a service account"
          }
        ]
      }
    },
    {
      "help": "The snyk test command checks projects for open-source vulnerabilities and license issues",
      "postfix": "Test",
      "definiteArgument": "test",
      "officialUrl": "https://docs.snyk.io/snyk-cli/commands/test",
      "settingsClass": {
        "properties": [
          {
            "name": "AllProjects",
            "type": "bool",
            "format": "--all-projects",
            "help": "Auto-detect all projects in the working directory, including Yarn workspaces"
          },
          {
            "name": "DetectionDepth",
            "type": "int",
            "format": "--detection-depth={value}",
            "help": "Use with --all-projects or --yarn-workspaces to indicate how many subdirectories to search. DEPTH must be a number, 1 or greater; zero (0) is the current directory"
          },
          {
            "name": "Exclude",
            "type": "string",
            "format": "--exclude={value}",
            "help": "Can be used with --all-projects and --yarn-workspaces to indicate directory names and file names to exclude. Must be comma-separated, and cannot include a path"
          },
          {
            "name": "SeverityThreshold",
            "type": "string",
            "format": "--severity-threshold={value}",
            "help": "Report only vulnerabilities at the specified level or higher e.g. critical, high, medium, low"
          },
          {
            "name": "Org",
            "type": "string",
            "format": "--org={value}",
            "secret": true,
            "help": "Specify the <ORG_ID>to run Snyk commands tied to a specific Snyk Organization. The <ORG_ID> influences private test limits"
          },
          {
            "name": "File",
            "type": "string",
            "format": "--file={value}",
            "help": "Specify a package file"
          },
          {
            "name": "PackageManager",
            "type": "string",
            "format": "--package-manager={value}",
            "help": "Specify the name of the package manager when the filename specified with the --file=<FILE> option is not standard. This allows Snyk to find the file"
          },
          {
            "name": "FailOn",
            "type": "string",
            "format": "--fail-on={value}",
            "help": "Fail only when there are vulnerabilities that can be fixed e.g. all,upgradable,patchable"
          },
          {
            "name": "Debug",
            "type": "bool",
            "format": "-d",
            "help": "Option to output the debug logs"
          }
        ]
      }
    },
    {
      "help": "The snyk code test command tests for any known security issues using Static Code Analysis",
      "postfix": "CodeTest",
      "definiteArgument": "code test",
      "officialUrl": "https://docs.snyk.io/snyk-cli/commands/code-test",
      "settingsClass": {
        "properties": [
          {
            "name": "AllProjects",
            "type": "bool",
            "format": "--all-projects",
            "help": "Auto-detect all projects in the working directory, including Yarn workspaces"
          },
          {
            "name": "Exclude",
            "type": "string",
            "format": "--exclude={value}",
            "help": "Can be used with --all-projects and --yarn-workspaces to indicate directory names and file names to exclude. Must be comma-separated, and cannot include a path"
          },
          {
            "name": "SeverityThreshold",
            "type": "string",
            "format": "--severity-threshold={value}",
            "help": "Report only vulnerabilities at the specified level or higher e.g. high, medium, low. Note: The Snyk Code configuration issues do not use the critical severity level"
          },
          {
            "name": "Org",
            "type": "string",
            "format": "--org={value}",
            "secret": true,
            "help": "Specify the <ORG_ID>to run Snyk commands tied to a specific Snyk Organization. The <ORG_ID> influences private test limits"
          },
          {
            "name": "Debug",
            "type": "bool",
            "format": "-d",
            "help": "Option to output the debug logs"
          }
        ]
      }
    },
    {
      "help": "The snyk sbom command generates an SBOM for a local software project in an ecosystem supported by Snyk",
      "postfix": "GenerateSbom",
      "definiteArgument": "sbom",
      "officialUrl": "https://docs.snyk.io/snyk-cli/commands/sbom",
      "settingsClass": {
        "properties": [
          {
            "name": "AllProjects",
            "type": "bool",
            "format": "--all-projects",
            "help": "Auto-detect all projects in the working directory, including Yarn workspaces"
          },
          {
            "name": "Format",
            "type": "string",
            "format": "--format={value}",
            "help": "Specify the output format for the SBOM to be produced e.g. yclonedx1.4+json, cyclonedx1.4+xml, spdx2.3+json"
          },
          {
            "name": "JsonFileOutput",
            "type": "string",
            "format": "--json-file-output={value}",
            "help": "Save the SBOM output as a JSON data structure directly to the specified file. This requires the SBOM --format to include +json"
          }
        ]
      }
    }
  ]
}
